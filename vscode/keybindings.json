// Place your key bindings in this file to override the defaultsauto[]
[
	{
		"key": "shift+cmd+.",
		"command": "eslint.executeAutofix"
	},
	{
		"key": "shift+cmd+.",
		"command": "-breadcrumbs.focusAndSelect",
		"when": "breadcrumbsPossible"
	},
	{
		"key": "shift+cmd+.",
		"command": "-editor.action.inPlaceReplace.down",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+cmd+.",
		"command": "-breadcrumbs.toggleToOn",
		"when": "!config.breadcrumbs.enabled"
	},
	{
		"key": "shift+cmd+,",
		"command": "workbench.action.terminal.toggleTerminal",
		"when": "terminal.active"
	},
	{
		"key": "ctrl+`",
		"command": "-workbench.action.terminal.toggleTerminal",
		"when": "terminal.active"
	},
	{
		"key": "shift+cmd+,",
		"command": "-editor.action.inPlaceReplace.up",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+cmd+c",
		"command": "workbench.view.scm",
		"when": "workbench.scm.active"
	},
	{
		"key": "ctrl+shift+g",
		"command": "-workbench.view.scm",
		"when": "workbench.scm.active"
	},
	{
		"key": "shift+cmd+r",
		"command": "editor.action.rename",
		"when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "f2",
		"command": "-editor.action.rename",
		"when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "tab",
		"command": "-insertNextSuggestion",
		"when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
	},
	{
		"key": "tab",
		"command": "selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "down",
		"command": "-selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "shift+tab",
		"command": "selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "up",
		"command": "-selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "a",
		"command": "explorer.newFile",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "d",
		"command": "deleteFile",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "alt+cmd+backspace",
		"command": "-deleteFile",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "r",
		"command": "renameFile",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "enter",
		"command": "-renameFile",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "o",
		"command": "explorer.openAndPassFocus",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
	},
	{
		"key": "cmd+down",
		"command": "-explorer.openAndPassFocus",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
	},
	{
		"key": "alt+\\",
		"command": "editor.action.inlineSuggest.trigger"
	},
	{
		"key": "alt+\\",
		"command": "-editor.action.inlineSuggest.trigger",
		"when": "editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"
	},
	{
		"key": "shift+cmd+'",
		"command": "workbench.action.toggleMaximizedPanel"
	},
	{
		"key": "shift+alt+t",
		"command": "workbench.view.extension.todo-tree-container"
	},
	{
		"key": "shift+alt+c",
		"command": "workbench.files.action.collapseExplorerFolders"
	},
	{
		"key": "alt+w",
		"command": "editor.emmet.action.wrapWithAbbreviation"
	},
	{
		"key": "alt+k",
		"command": "editor.action.marker.prev",
		"when": "editorFocus"
	},
	{
		"key": "shift+alt+f8",
		"command": "-editor.action.marker.prev",
		"when": "editorFocus"
	},
	{
		"key": "cmd+i",
		"command": "editor.action.triggerSuggest",
		"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
	},
	{
		"key": "alt+escape",
		"command": "-editor.action.triggerSuggest",
		"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
	},
	{
		"key": "shift+cmd+e",
		"command": "workbench.view.explorer",
		"when": "workbench.scm.active"
	},
	{
		"key": "shift+cmd+e",
		"command": "-workbench.view.explorer",
		"when": "viewContainer.workbench.view.explorer.enabled"
	},
	{
		"key": "shift+cmd+i",
		"command": "codeium.openCodeiumCommand",
		"when": "codeium.commandEnabled && editorTextFocus && !inlineSuggestionsVisible"
	},
	{
		"key": "cmd+i",
		"command": "-codeium.openCodeiumCommand",
		"when": "codeium.commandEnabled && editorTextFocus && !inlineSuggestionsVisible"
	},
	{
		"key": "shift+cmd+o",
		"command": "editor.action.organizeImports",
		"when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
	},
	{
		"key": "shift+alt+o",
		"command": "-editor.action.organizeImports",
		"when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
	},
	{
		"key": "shift+cmd+k",
		"command": "-editor.action.deleteLines",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "shift+cmd+k",
		"command": "editor.action.deleteLines"
	},
	{
		"key": "ctrl+h",
		"command": "workbench.action.terminal.focusPreviousPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "alt+cmd+up",
		"command": "-workbench.action.terminal.focusPreviousPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+l",
		"command": "workbench.action.terminal.focusNextPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "alt+cmd+right",
		"command": "-workbench.action.terminal.focusNextPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "shift+cmd+g",
		"command": "workbench.panel.chat.view.copilot.focus"
	},
	{
		"key": "cmd+g g",
		"command": "workbench.action.createTerminalEditor"
	},
	{
		"key": "cmd+u",
		"command": "hideSuggestWidget",
		"when": "suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "shift+escape",
		"command": "-hideSuggestWidget",
		"when": "suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+i",
		"command": "inlineChat.start",
		"when": "editorFocus && inlineChatHasProvider && !editorReadonly"
	},
	{
		"key": "cmd+i",
		"command": "-inlineChat.start",
		"when": "editorFocus && inlineChatHasProvider && !editorReadonly"
	},
	// Vim keybindings
	{
		"key": "shift-j",
		"command": "editor.action.moveLinesDownAction",
		"when": "vim.mode == 'VisualLine' && editorTextFocus"
	},
	{
		"key": "shift-k",
		"command": "editor.action.moveLinesUpAction",
		"when": "vim.mode == 'VisualLine' && editorTextFocus"
	},
	{
		"key": "shift-k",
		"command": "editor.action.showHover",
		"when": "vim.mode == 'Normal' && editorTextFocus"
	},
	{
		"key": "space c a",
		"command": "editor.action.codeAction",
		"when": "vim.mode == 'Normal' && editorTextFocus"
	},
	{
		"key": "space c r",
		"command": "editor.action.rename",
		"when": "vim.mode == 'Normal' && editorTextFocus"
	},
	{
		"key": "space c s",
		"command": "workbench.action.gotoSymbol",
		"when": "vim.mode == 'Normal' && editorTextFocus"
	},
	{
		"key": "space b d",
		"command": "workbench.action.closeActiveEditor",
		"when": "vim.mode == 'Normal' && editorTextFocus"
	},
	{
		"key": "space space",
		"command": "workbench.action.quickOpen",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
	},
	{
		"key": "g d",
		"command": "editor.action.revealDefinition",
		"when": "vim.mode == 'Normal' && editorTextFocus"
	},
	{
		"key": "g r",
		"command": "editor.action.goToReferences",
		"when": "vim.mode == 'Normal' && editorTextFocus"
	},
	{
		"key": "space s g",
		"command": "workbench.action.findInFiles",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
	},
	// {
	// 	"key": "g g",
	// 	"command": "runCommands",
	// 	"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)",
	// 	"args": {
	// 		"commands": ["workbench.view.scm", "workbench.scm.focus"]
	// 	}
	// },
	{
		"key": "space h",
		"command": "vscode-harpoon.editorQuickPick",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
	},
	{
		"key": "space shift+h",
		"command": "vscode-harpoon.addEditor",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
	},
	{
		"key": "space e",
		"command": "vscode-harpoon.editEditors",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
	},
	{
		"key": "space 1",
		"command": "vscode-harpoon.gotoEditor1",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
	},
	{
		"key": "space 2",
		"command": "vscode-harpoon.gotoEditor2",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
	},
	{
		"key": "space 3",
		"command": "vscode-harpoon.gotoEditor3",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
	},
	{
		"key": "space 4",
		"command": "vscode-harpoon.gotoEditor4",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
	},
	{
		"key": "space 5",
		"command": "vscode-harpoon.gotoEditor5",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
	},
	{
		"key": "space 6",
		"command": "vscode-harpoon.gotoEditor6",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
	},
	{
		"key": "space 7",
		"command": "vscode-harpoon.gotoEditor7",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
	},
	{
		"key": "space 8",
		"command": "vscode-harpoon.gotoEditor8",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
	},
	{
		"key": "space 9",
		"command": "vscode-harpoon.gotoEditor9",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
	},
	{
		"key": "shift+h",
		"command": "workbench.action.previousEditor",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
	},
	{
		"key": "shift+l",
		"command": "workbench.action.nextEditor",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
	}
]
